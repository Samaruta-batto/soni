// This is an autogenerated file from Firebase Studio.
'use server';

/**
 * @fileOverview An AI-powered essential oil recommendation agent.
 *
 * - getOilRecommendation - A function that suggests essential oils based on user needs.
 * - OilRecommendationInput - The input type for the getOilRecommendation function.
 * - OilRecommendationOutput - The return type for the getOilRecommendation function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const OilRecommendationInputSchema = z.object({
  needs: z
    .string()
    .describe("The user's specified needs or desired benefits (e.g., stress relief, skincare)."),
});
export type OilRecommendationInput = z.infer<typeof OilRecommendationInputSchema>;

const OilRecommendationOutputSchema = z.object({
  recommendations: z
    .string()
    .describe('A list of essential oil recommendations based on the user-specified needs.'),
});
export type OilRecommendationOutput = z.infer<typeof OilRecommendationOutputSchema>;

export async function getOilRecommendation(input: OilRecommendationInput): Promise<OilRecommendationOutput> {
  return oilRecommendationFlow(input);
}

const oilRecommendationPrompt = ai.definePrompt({
  name: 'oilRecommendationPrompt',
  input: {schema: OilRecommendationInputSchema},
  output: {schema: OilRecommendationOutputSchema},
  prompt: `You are an AI assistant specializing in essential oil recommendations. Based on the user's specified needs, provide a list of suitable essential oils.

Needs: {{{needs}}}

Recommendations:`,
});

const oilRecommendationFlow = ai.defineFlow(
  {
    name: 'oilRecommendationFlow',
    inputSchema: OilRecommendationInputSchema,
    outputSchema: OilRecommendationOutputSchema,
  },
  async input => {
    const {output} = await oilRecommendationPrompt(input);
    return output!;
  }
);
