// This is an autogenerated file from Firebase Studio.
'use server';

/**
 * @fileOverview An AI-powered essential oil recommendation agent.
 *
 * - getOilRecommendation - A function that suggests essential oils based on user needs.
 * - OilRecommendationInput - The input type for the getOilRecommendation function.
 * - OilRecommendationOutput - The return type for the getOilRecommendation function.
 */

import { ai } from '@/ai/genkit';
import { z } from 'genkit';
import { products } from '@/lib/data';

const OilRecommendationInputSchema = z.object({
  needs: z
    .string()
    .describe("The user's specified needs or desired benefits (e.g., stress relief, skincare)."),
});
export type OilRecommendationInput = z.infer<typeof OilRecommendationInputSchema>;

const OilRecommendationOutputSchema = z.object({
  recommendations: z
    .array(z.string())
    .describe('A list of product IDs for essential oils that are suitable for the user-specified needs.'),
  message: z.string().describe('A friendly message explaining the recommendations.'),
});
export type OilRecommendationOutput = z.infer<typeof OilRecommendationOutputSchema>;

export async function getOilRecommendation(
  input: OilRecommendationInput
): Promise<OilRecommendationOutput> {
  return oilRecommendationFlow(input);
}

const oilRecommendationPrompt = ai.definePrompt({
  name: 'oilRecommendationPrompt',
  input: { schema: OilRecommendationInputSchema },
  output: { schema: OilRecommendationOutputSchema },
  prompt: `You are an AI assistant specializing in essential oil recommendations. Based on the user's specified needs, provide a list of suitable essential oil product IDs and a friendly message explaining why you chose them.

You can only recommend products from the following list. Output only the 'id' of the product.
Do not recommend products that are not on this list.

Available Products:
${products.map(p => `- ${p.name} (id: ${p.id})`).join('\n')}

User Needs: {{{needs}}}
`,
});

const oilRecommendationFlow = ai.defineFlow(
  {
    name: 'oilRecommendationFlow',
    inputSchema: OilRecommendationInputSchema,
    outputSchema: OilRecommendationOutputSchema,
  },
  async (input) => {
    const { output } = await oilRecommendationPrompt(input);
    return output!;
  }
);
